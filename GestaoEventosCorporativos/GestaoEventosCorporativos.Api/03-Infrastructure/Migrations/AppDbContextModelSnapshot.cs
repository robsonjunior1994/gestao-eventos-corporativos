// <auto-generated />
using System;
using GestaoEventosCorporativos.Api._03_Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestaoEventosCorporativos.Api._03Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Local")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LotacaoMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OrcamentoMaximo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoEventoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoEventoId");

                    b.ToTable("Eventos", (string)null);
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.EventoFornecedor", b =>
                {
                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorContratado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("EventoId", "FornecedorId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("EventosFornecedores", (string)null);
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("ValorBase")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores", (string)null);
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Participantes", (string)null);
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.ParticipanteEvento", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .HasColumnType("int");

                    b.Property<int>("EventoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInscricao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("ParticipanteId", "EventoId");

                    b.HasIndex("EventoId");

                    b.ToTable("ParticipantesEventos", (string)null);
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.TipoEvento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TiposEventos", (string)null);
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.Evento", b =>
                {
                    b.HasOne("GestaoEventosCorporativos.Api._02_Core.Entities.TipoEvento", "TipoEvento")
                        .WithMany("Eventos")
                        .HasForeignKey("TipoEventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoEvento");
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.EventoFornecedor", b =>
                {
                    b.HasOne("GestaoEventosCorporativos.Api._02_Core.Entities.Evento", "Evento")
                        .WithMany("Fornecedores")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoEventosCorporativos.Api._02_Core.Entities.Fornecedor", "Fornecedor")
                        .WithMany("Eventos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.ParticipanteEvento", b =>
                {
                    b.HasOne("GestaoEventosCorporativos.Api._02_Core.Entities.Evento", "Evento")
                        .WithMany("Participantes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestaoEventosCorporativos.Api._02_Core.Entities.Participante", "Participante")
                        .WithMany("Eventos")
                        .HasForeignKey("ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.Evento", b =>
                {
                    b.Navigation("Fornecedores");

                    b.Navigation("Participantes");
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.Fornecedor", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.Participante", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("GestaoEventosCorporativos.Api._02_Core.Entities.TipoEvento", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
